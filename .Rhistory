group_comparison_var_nominal_khi %>%
unnest(out) %>%
dplyr::select(vis, g1, g2, p, size)
colnames(output_nominal_khi_fish)<-c("Variable", "Biased Writing", "Upright Writing",
"P Value",
"Effect Size" )
write.table(output_nominal_khi_fish,
file = here::here("3-output","khi_ben_bias.txt"),
sep = ",", quote = FALSE, row.names = F)
output_nominal_khi_fish %>% kable()
dp$trans<-ifelse(dp$vv_bias_ln == "vv_left"  &  dp$pv_bias_ln == "pv_left", 1,0)
tvv<-table(dp$vv_bias_ln, dp$ben_bias_ln )
tpv<-table(dp$ben_bias_ln, dp$pv_bias_ln)
ttrans<-table(dp$ben_bias_ln, dp$trans)
library("epitools")
oddsratio.small(tvv, rev =  "columns")$measure
oddsratio.small(tpv, rev =  "columns")$measure
oddsratio.small(ttrans)$measure
chisq.test(tvv)
chisq.test(tpv)
chisq.test(ttrans)
p_scp<-ggplot(dp, aes(x=as.factor(WBC), y =scp, fill = as.factor(WBC)))+
geom_hline(yintercept = c(0,1,2,3,4,5), lty = "dashed")+
geom_boxplot(size =1.5, outlier.shape = NA)+
geom_jitter(size =5, width = 0.08,stroke = 1.6,alpha = 0.8,shape = 21 )+
guides(fill = F)+
labs(x = "Writing orientation", y = "SCP")+
scale_y_continuous(breaks = seq(1,6,1))+
scale_x_discrete(labels = c("Upright", "Biased"))+
theme_bw(base_size = 18)
ggsave("plot_scp.png",
p_scp, path = here::here("3-output"))
# table(dp$WBC)
dp$WBC<-ifelse(dp$ben_angle_line_mean < ben_normality_range[1] , 1, 0)
dc$WBC<-ifelse(dc$ben_angle_line_mean < ben_normality_range[1] , 1, 0)
dp$trans<-ifelse(dp$vv_bias_ln == "vv_left"  &  dp$pv_bias_ln == "pv_left", 1,0)
tvv<-table(dp$vv_bias_ln, dp$ben_bias_ln )
tpv<-table(dp$ben_bias_ln, dp$pv_bias_ln)
ttrans<-table(dp$ben_bias_ln, dp$trans)
library("epitools")
oddsratio.small(tvv, rev =  "columns")$measure
oddsratio.small(tpv, rev =  "columns")$measure
oddsratio.small(ttrans)$measure
chisq.test(tvv)
chisq.test(tpv)
chisq.test(ttrans)
p_scp<-ggplot(dp, aes(x=as.factor(WBC), y =scp, fill = as.factor(WBC)))+
geom_hline(yintercept = c(0,1,2,3,4,5), lty = "dashed")+
geom_boxplot(size =1.5, outlier.shape = NA)+
geom_jitter(size =5, width = 0.08,stroke = 1.6,alpha = 0.8,shape = 21 )+
guides(fill = F)+
labs(x = "Writing orientation", y = "SCP")+
scale_y_continuous(breaks = seq(1,6,1))+
scale_x_discrete(labels = c("Upright", "Biased"))+
theme_bw(base_size = 18)
ggsave("plot_scp.png",
p_scp, path = here::here("3-output"))
p_scp
dp2<-dp %>%
select(WBC, bdn_score, nbn_score) %>%
gather(key, value, -WBC) %>%
mutate(key = recode(key,
bdn_score = "Body",
nbn_score = "Non-Body"
))
p_nsu<-
ggplot(dp2, aes(x=as.factor(WBC), y =value, fill = as.factor(WBC)))+
# geom_hline(yintercept = c(0,1,2,3,4,5), lty = "dashed")+
geom_boxplot(size =1.5, outlier.shape = NA)+
geom_jitter(size =5, width = 0.08,stroke = 1.6,alpha = 0.8,shape = 21 )+
guides(fill = F)+
labs(x = "Writing orientation", y = "Neglect (a.u)")+
scale_x_discrete(labels = c("Upright", "Biased"))+
facet_wrap(~key, scales = "free")+
theme(
strip.background = element_rect(
color="black", fill="grey", size=2, linetype="solid"
)
)+
theme_bw(base_size = 18)
ggsave("plot_nsu.png",
p_nsu, path = here::here("3-output"))
p_nsu
dp3<-dp %>%
select(WBC, vv_tilt, pv_tilt) %>%
gather(key, value, -WBC) %>%
mutate(key = recode(key,
vv_tilt = "VV",
pv_tilt = "PV"
))
p_vv_pv<-
ggplot(dp3, aes(x=as.factor(WBC), y =value, fill = as.factor(WBC)))+
geom_hline(yintercept = c(0), lty = "dashed")+
geom_boxplot(size =1.5, outlier.shape = NA)+
geom_jitter(size =5, width = 0.08,stroke = 1.6,alpha = 0.8,shape = 21 )+
guides(fill = F)+
labs(x = "Writing orientation", y = "Orientation (°)")+
scale_x_discrete(labels = c("Upright", "Biased"))+
facet_wrap(~key, scales = "free")+
theme(
strip.background = element_rect(
color="black", fill="grey", size=2, linetype="solid"
)
)+
theme_bw(base_size = 18)
ggsave("plot_vv_pv.png",
p_nsu, path = here::here("3-output"))
p_vv_pv
reg<- # df for logistic regression
dp %>%
select(ben_bias_ln, vv_tilt, pv_tilt, scp,
nbn_score,bdn_score, apraxia_30)
#we center the predictors to interprate the intercept
# missing data---------------
apply(reg,2, function(x) sum(is.na(x)))
med_vv<-median(dp$vv_tilt, na.rm = T)
med_pv<-median(dp$pv_tilt, na.rm = T)
med_scp<-median(dp$scp, na.rm = T)
reg$vv_tilt<-ifelse(is.na(reg$vv_tilt)==T, med_vv, reg$vv_tilt)
reg$pv_tilt<-ifelse(is.na(reg$pv_tilt)==T, med_pv, reg$pv_tilt)
reg$scp<-ifelse(is.na(reg$scp)==T, med_scp, reg$scp)
apply(reg,2, function(x) sum(is.na(x)))
reg[-1]<-apply(reg[-1], 2, function(i)(i - mean(i)))
# on centre les variables
#model----------------
model.null = glm(ben_bias_ln ~ 1,
data=reg,
family = binomial(link="logit")
)
model.full = glm(ben_bias_ln  ~ vv_tilt + pv_tilt + scp +
nbn_score + bdn_score +
apraxia_30,
data=reg,
family = binomial(link="logit")
)
step(model.null,
scope = list(upper=model.full),
direction="forward",
test="Chisq",
data=reg,
trace = 0)
# aic = 47.34
step(model.null,
scope = list(upper=model.full),
direction="backward",
test="Chisq",
data=reg,
trace = 0)
# aic = 64.18
step(model.null,
scope = list(upper=model.full),
direction="both",
test="Chisq",
data=reg,
trace = 0,
criterion = "BIC")
model.final = glm(ben_bias_ln ~ pv_tilt + nbn_score,
data=reg,
family = binomial(link="logit"),
na.action(na.omit))
plot(model.final)
wald<-summary(model.final)
library(aod)
chi_pv<-wald.test(b = coef(model.final), Sigma = vcov(model.final), Terms = 2)
chi_nbn<-wald.test(b = coef(model.final), Sigma = vcov(model.final), Terms = 3)
#Anova(model.final, type="II", test="Wald") %>% tidy()
library("questionr")
OR<-round(questionr::odds.ratio(model.final) ,2)
OR2<-OR %>%
mutate(proba = OR/(1+OR))
write.table(OR2,
here::here("3-output",
"reg_logistique_odd_ratio"))
mcr2<-round(nagelkerke(model.final)$Pseudo.R.squared.for.model.vs.null[1],2)
mc1<-glm(ben_bias_ln ~ pv_tilt,data=reg, family = binomial(link="logit"),na.action(na.omit))
aov1<-anova(mc1, model.final)
prd1<-(aov1$`Resid. Dev`[1] - aov1$`Resid. Dev`[2])/aov1$`Resid. Dev`[1]
#nbn_score réduit déviance de 6%
mc2<-glm(ben_bias_ln ~ nbn_score,data=reg, family = binomial(link="logit"),na.action(na.omit))
aov2<-anova(mc2, model.final)
prd2<-(aov2$`Resid. Dev`[1] - aov2$`Resid. Dev`[2])/aov2$`Resid. Dev`[1]
#pv tilt réduit déviance de 21%
#McFadden's pseudo-R squared
reg<- # df for logistic regression
dp %>%
select(ben_bias_ln, vv_tilt, pv_tilt, scp,
nbn_score,bdn_score, apraxia_30)
#we center the predictors to interprate the intercept
# missing data---------------
apply(reg,2, function(x) sum(is.na(x)))
med_vv<-median(dp$vv_tilt, na.rm = T)
med_pv<-median(dp$pv_tilt, na.rm = T)
med_scp<-median(dp$scp, na.rm = T)
reg$vv_tilt<-ifelse(is.na(reg$vv_tilt)==T, med_vv, reg$vv_tilt)
reg$pv_tilt<-ifelse(is.na(reg$pv_tilt)==T, med_pv, reg$pv_tilt)
reg$scp<-ifelse(is.na(reg$scp)==T, med_scp, reg$scp)
apply(reg,2, function(x) sum(is.na(x)))
reg[-1]<-apply(reg[-1], 2, function(i)(i - mean(i)))
# on centre les variables
#model----------------
model.null = glm(ben_bias_ln ~ 1,
data=reg,
family = binomial(link="logit")
)
model.full = glm(ben_bias_ln  ~ vv_tilt + pv_tilt + scp +
nbn_score + bdn_score +
apraxia_30,
data=reg,
family = binomial(link="logit")
)
step(model.null,
scope = list(upper=model.full),
direction="forward",
test="Chisq",
data=reg,
trace = 0)
# aic = 47.34
step(model.null,
scope = list(upper=model.full),
direction="backward",
test="Chisq",
data=reg,
trace = 0)
# aic = 64.18
step(model.null,
scope = list(upper=model.full),
direction="both",
test="Chisq",
data=reg,
trace = 0,
criterion = "BIC")
model.final = glm(ben_bias_ln ~ pv_tilt + nbn_score,
data=reg,
family = binomial(link="logit"),
na.action(na.omit))
wald<-summary(model.final)
library(aod)
chi_pv<-wald.test(b = coef(model.final), Sigma = vcov(model.final), Terms = 2)
chi_nbn<-wald.test(b = coef(model.final), Sigma = vcov(model.final), Terms = 3)
#Anova(model.final, type="II", test="Wald") %>% tidy()
library("questionr")
OR<-round(questionr::odds.ratio(model.final) ,2)
OR2<-OR %>%
mutate(proba = OR/(1+OR))
write.table(OR2,
here::here("3-output",
"reg_logistique_odd_ratio"))
mcr2<-round(nagelkerke(model.final)$Pseudo.R.squared.for.model.vs.null[1],2)
mc1<-glm(ben_bias_ln ~ pv_tilt,data=reg, family = binomial(link="logit"),na.action(na.omit))
aov1<-anova(mc1, model.final)
prd1<-(aov1$`Resid. Dev`[1] - aov1$`Resid. Dev`[2])/aov1$`Resid. Dev`[1]
#nbn_score réduit déviance de 6%
mc2<-glm(ben_bias_ln ~ nbn_score,data=reg, family = binomial(link="logit"),na.action(na.omit))
aov2<-anova(mc2, model.final)
prd2<-(aov2$`Resid. Dev`[1] - aov2$`Resid. Dev`[2])/aov2$`Resid. Dev`[1]
#pv tilt réduit déviance de 21%
#McFadden's pseudo-R squared
reg<- # df for logistic regression
dp %>%
select(ben_bias_ln, vv_tilt, pv_tilt, scp,
nbn_score,bdn_score, apraxia_30)
#we center the predictors to interprate the intercept
# missing data---------------
# apply(reg,2, function(x) sum(is.na(x)))
med_vv<-median(dp$vv_tilt, na.rm = T)
med_pv<-median(dp$pv_tilt, na.rm = T)
med_scp<-median(dp$scp, na.rm = T)
reg$vv_tilt<-ifelse(is.na(reg$vv_tilt)==T, med_vv, reg$vv_tilt)
reg$pv_tilt<-ifelse(is.na(reg$pv_tilt)==T, med_pv, reg$pv_tilt)
reg$scp<-ifelse(is.na(reg$scp)==T, med_scp, reg$scp)
# apply(reg,2, function(x) sum(is.na(x)))
reg[-1]<-apply(reg[-1], 2, function(i)(i - mean(i)))
# on centre les variables
#model----------------
model.null = glm(ben_bias_ln ~ 1,
data=reg,
family = binomial(link="logit")
)
model.full = glm(ben_bias_ln  ~ vv_tilt + pv_tilt + scp +
nbn_score + bdn_score +
apraxia_30,
data=reg,
family = binomial(link="logit")
)
step(model.null,
scope = list(upper=model.full),
direction="forward",
test="Chisq",
data=reg,
trace = 0)
# aic = 47.34
step(model.null,
scope = list(upper=model.full),
direction="backward",
test="Chisq",
data=reg,
trace = 0)
# aic = 64.18
step(model.null,
scope = list(upper=model.full),
direction="both",
test="Chisq",
data=reg,
trace = 0,
criterion = "BIC")
model.final = glm(ben_bias_ln ~ pv_tilt + nbn_score,
data=reg,
family = binomial(link="logit"),
na.action(na.omit))
wald<-summary(model.final)
library(aod)
chi_pv<-wald.test(b = coef(model.final), Sigma = vcov(model.final), Terms = 2)
chi_nbn<-wald.test(b = coef(model.final), Sigma = vcov(model.final), Terms = 3)
#Anova(model.final, type="II", test="Wald") %>% tidy()
library("questionr")
OR<-round(questionr::odds.ratio(model.final) ,2)
OR2<-OR %>%
mutate(proba = OR/(1+OR))
write.table(OR2,
here::here("3-output",
"reg_logistique_odd_ratio"))
mcr2<-round(nagelkerke(model.final)$Pseudo.R.squared.for.model.vs.null[1],2)
mc1<-glm(ben_bias_ln ~ pv_tilt,data=reg, family = binomial(link="logit"),na.action(na.omit))
aov1<-anova(mc1, model.final)
prd1<-(aov1$`Resid. Dev`[1] - aov1$`Resid. Dev`[2])/aov1$`Resid. Dev`[1]
#nbn_score réduit déviance de 6%
mc2<-glm(ben_bias_ln ~ nbn_score,data=reg, family = binomial(link="logit"),na.action(na.omit))
aov2<-anova(mc2, model.final)
prd2<-(aov2$`Resid. Dev`[1] - aov2$`Resid. Dev`[2])/aov2$`Resid. Dev`[1]
#pv tilt réduit déviance de 21%
#McFadden's pseudo-R squared
library(aod)
OR2
f<-ggplot(reg, aes(y = ben_bias_ln, x = pv_tilt))+
geom_hline(yintercept = 0, linetype = "dotted") +
geom_hline(yintercept = 1, linetype = "dotted") +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se =T, fill = rangi2) +
geom_point(size = 4, alpha = 0.4) +
guides(color = F)+
theme_classic()+
labs(y ="Probabilities of upright writing", x = "PV tilt (°)")+
scale_x_continuous(breaks = c(-12:5, 4))+
scale_y_continuous(labels = scales::percent)
ggsave("plot_proba_pv1.png",
f, path = here::here("3-output"))
f
reg2<-reg[,c("ben_bias_ln", "nbn_score", "pv_tilt")]
reg2$proba<- predict(model.final, type = "response")
reg2$logit<- log(reg2$proba/(1-reg2$proba))
f2<-ggplot(reg2, aes(x = pv_tilt, y = logit)) +
geom_smooth(method="lm", fill = rangi2) +
geom_point(size = 4, alpha = 0.4) +
labs(y ="Logit of writing bias", x = "PV tilt (°)")+
scale_x_continuous(breaks = c(-12:5, 4))+
scale_y_continuous(breaks = c(-4:4, 1))+
theme_classic()
ggsave("plot_logit_pv.png",
f2, path = here::here("3-output"))
f2
augment(model.final) %>%
ggplot(., aes(x = ))
f2
reg
f<-ggplot(reg, aes(y = ben_bias_ln, x = pv_tilt))+
geom_hline(yintercept = 0, linetype = "dotted") +
geom_hline(yintercept = 1, linetype = "dotted") +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se =T, fill = rangi2) +
geom_point(size = 4, alpha = 0.4) +
guides(color = F)+
theme_classic()+
labs(y ="Probabilities of upright writing", x = "PV tilt (°)")+
scale_x_continuous(breaks = c(-12:5, 4))+
scale_y_continuous(labels = scales::percent)
ggsave("plot_proba_pv1.png",
f, path = here::here("3-output"))
f
reg
reg %>%
gather(-ben_bias_ln)
reg %>%
gather(key, value,-ben_bias_ln)
plotx<-reg %>%
gather(key, value,-ben_bias_ln)
plotx
ggplot(plotx, aes(y = ben_bias_ln, x = value))+
geom_hline(yintercept = 0, linetype = "dotted") +
geom_hline(yintercept = 1, linetype = "dotted") +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se =T, fill = rangi2) +
geom_point(size = 4, alpha = 0.4) +
guides(color = F)+
theme_bw(base_size = 18)+
labs(y ="Probabilities of upright writing", x = "PV tilt (°)")+
scale_x_continuous(breaks = c(-12:5, 4))+
scale_y_continuous(labels = scales::percent)+
facet_wrap(~ key)
ggplot(plotx, aes(y = ben_bias_ln, x = value))+
geom_hline(yintercept = 0, linetype = "dotted") +
geom_hline(yintercept = 1, linetype = "dotted") +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se =T, fill = rangi2) +
geom_point(size = 4, alpha = 0.4) +
guides(color = F)+
theme_bw(base_size = 18)+
labs(y ="Probabilities of upright writing", x = "PV tilt (°)")+
scale_y_continuous(labels = scales::percent)+
facet_wrap(~ key)
ggplot(plotx, aes(y = ben_bias_ln, x = value))+
geom_hline(yintercept = 0, linetype = "dotted") +
geom_hline(yintercept = 1, linetype = "dotted") +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se =T, fill = rangi2) +
geom_point(size = 4, alpha = 0.4) +
guides(color = F)+
theme_bw(base_size = 18)+
labs(y ="Probabilities of upright writing", x = "PV tilt (°)")+
scale_y_continuous(labels = scales::percent)+
facet_wrap(~ key, scales = "free")
logit<-
ggplot(plotx, aes(y = ben_bias_ln, x = value))+
geom_hline(yintercept = 0, linetype = "dotted") +
geom_hline(yintercept = 1, linetype = "dotted") +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se =T, fill = rangi2) +
geom_point(size = 4, alpha = 0.4) +
guides(color = F)+
theme_bw(base_size = 18)+
labs(y ="Probabilities of upright writing", x = "PV tilt (°)")+
scale_y_continuous(labels = scales::percent)+
facet_wrap(~ key, scales = "free")
ggsave("plot_logit.png",
logit, path = here::here("3-output"))
logit
logit<-
ggplot(plotx, aes(y = ben_bias_ln, x = value))+
geom_hline(yintercept = 0, linetype = "dotted") +
geom_hline(yintercept = 1, linetype = "dotted") +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se =T, fill = rangi2) +
geom_point(size = 4, alpha = 0.4) +
guides(color = F)+
theme_bw(base_size = 18)+
labs(y ="Probabilities of upright writing", x = "Predictors")+
scale_y_continuous(labels = scales::percent)+
facet_wrap(~ key, scales = "free")
ggsave("plot_logit.png",
logit, path = here::here("3-output"))
logit
msd <- function(df, ivs = "", dv){
ivs<-syms(ivs)
msd<-
df %>%
select(!!!ivs, !!sym(dv)) %>%
group_by(!!! ivs) %>%
dplyr::summarise(mean = mean(!!sym(dv), na.rm = TRUE),
sd = sd(!!sym(dv), na.rm = TRUE),
lower.sd = mean - sd,
upper.sd = mean + sd,
n = n()) %>%
mutate(se = sd / sqrt(n),
lower.ci = mean - qt(1 - (0.05 / 2), n - 1) * se,
upper.ci = mean + qt(1 - (0.05 / 2), n - 1) * se) %>%
mutate_if(is.numeric, round, digits = 2) %>%
mutate(txt = paste("*M* = ",mean,", *SD* = ",sd, sep = ""))
return(list(msd = msd))
}
msd <- function(df, ivs = "", dv){
ivs<-syms(ivs)
msd<-
df %>%
select(!!!ivs, !!sym(dv)) %>%
group_by(!!! ivs) %>%
dplyr::summarise(mean = mean(!!sym(dv), na.rm = TRUE),
sd = sd(!!sym(dv), na.rm = TRUE),
lower.sd = mean - sd,
upper.sd = mean + sd,
n = n()) %>%
mutate(se = sd / sqrt(n),
lower.ci = mean - qt(1 - (0.05 / 2), n - 1) * se,
upper.ci = mean + qt(1 - (0.05 / 2), n - 1) * se) %>%
mutate_if(is.numeric, round, digits = 2) %>%
mutate(txt = paste("*M* = ",mean,", *SD* = ",sd, sep = ""))
return(list(msd = msd))
}
msd$txt[3]
ben_normality_range[1]
ben_normality_range<-
c((mean(dc$ben_angle_line_mean) - (2*sd(dc$ben_angle_line_mean))) ,
mean(dc$ben_angle_line_mean), (mean(dc$ben_angle_line_mean) + (2*sd(dc$ben_angle_line_mean))))
library(rlang)
devtools::load_all(".")
library(e118)
sys.call()
Sys.make()
Sys.which()
Sys.which("make")
Sys.which("make")
library(e118)
library(devtools)
install_github(remi-lafitte/e118)
install_github(remi-lafitte\e118)
?install_github(remi-lafitte/e118)
install_github("remi-lafitte/e118")
