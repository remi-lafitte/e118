mutate_if(is.numeric, round, digits=3)
table<-
model$anova_table %>%
data.frame %>%
mutate(Parameter = rownames(.))%>%
mutate_if(is.numeric, round, digits=2) %>%
inner_join(., pes, by = "Parameter")
txt<- table %>%
mutate(
txt= paste("*F*(",
num.Df,
", ",
den.Df,
") = ",
F,
", *p* < ",
Pr..F.,
", ges = ",
ges,
", pes = ",
Eta_Sq_partial,
", 95% CI [",
CI_low,
", ",
CI_high,
"]",
sep = "")
)
txt<-txt[txt$Parameter == effect,]
return(txt)
}
#' data$ID<-1:nrow(data)
#' model<-afex::aov_4(mpg~ vs * am + (1|ID), data) # between-subject design
#' result<-anova_txt(model = model, effect = "vs")
#' result$txt
#' example 2
#' data(mtcars)
#' data<-mtcars %>% mutate(ID = rep(1:16, 2), intra = rep(c(0,1), each=16))
#' model<-afex::aov_4(mpg~ 1 + (intra|ID), data) # within-subject design
#' result<-anova_txt(model = model)
#' result$anova$txt
aov4_txt(model)
#' data$ID<-1:nrow(data)
#' model<-afex::aov_4(mpg~ vs * am + (1|ID), data) # between-subject design
#' result<-anova_txt(model = model, effect = "vs")
#' result$txt
#' example 2
#' data(mtcars)
#' data<-mtcars %>% mutate(ID = rep(1:16, 2), intra = rep(c(0,1), each=16))
#' model<-afex::aov_4(mpg~ 1 + (intra|ID), data) # within-subject design
#' result<-anova_txt(model = model)
#' result$anova$txt
aov4_txt(model, effect = "vs")
#'a<-c(200.1, 190.9, 192.7, 213, 241.4, 196.9, 172.2, 185.5, 205.2, 193.7)
#' Poids des souris après traitement
#'b<-c(392.9, 393.2, 345.1, 393, 434, 427.9, 422, 383.9, 392.3, 352.2)
#' x<-t.test(a , mu=  0)
#' y<-t.test(a,b)
#' z<-t.test(a,b, paired = T)
#' tt_txt(x)
#' tt_txt(y, beta = F)
#' tt_txt(z)
#' tt_txt(z, beta = T)
tt_txt <- function(model, beta = T){
p_txt<-function(p){
a = 'p < '
b = 'p = '
p <- ifelse(is.character(p), as.numeric(p), p)
p3 <- round(p, 3)
pv<-
ifelse(p < 0.000001,
"p < 10^-6",
ifelse(p < .00001,
"p < 10^-5",
ifelse(p < .0001,
"p < 10^-4",
ifelse(p < .001,
"p < 0.001",
ifelse(p < .05,
paste("*p* < ", p3, sep = ""),
paste("*p* = ", p3, sep = ""))))))
return(pv)
}
ttest<-model
# one sample t test
q<-round(ttest$statistic,2)# statistic q
dof<-round(ttest$parameter,2)# global degree of freedom
pv<-p_txt(ttest$p.value)# raw p value. Beyond 10^-6, the round will give 0.
b <- round(ttest$estimate[1] - ifelse(is.na(ttest$estimate[2]),0,ttest$estimate[2]),2)
# estimation of the beta slope.
full<- paste(
ifelse(isTRUE(beta),
paste("*M* = ",b, ", ", sep = ""), ""),
"95% CI [",round(ttest$conf.int[1],2),", ",
round(ttest$conf.int[2],2),"], *t*(",dof,") = ",q,", ",pv,
sep ="")
small<- paste("*t*(",dof,") = ",q,", ",pv,
sep ="")
return(list(full=full, small=small))
}
tt_txt(x)
a<-c(200.1, 190.9, 192.7, 213, 241.4, 196.9, 172.2, 185.5, 205.2, 193.7)
b<-c(392.9, 393.2, 345.1, 393, 434, 427.9, 422, 383.9, 392.3, 352.2)
y<-t.test(a,b)
tt_txt(y, beta = F)
#' @export p_txt
#' @param
#' A p value
#' @examples
p_txt<-function(p){
a = 'p < '
b = 'p = '
p <- ifelse(is.character(p), as.numeric(p), p)
p3 <- round(p, 3)
pv<-
ifelse(p < 0.000001,
"*p* < 10^-6",
ifelse(p < .00001,
"*p* < 10^-5",
ifelse(p < .0001,
"*p* < 10^-4",
ifelse(p < .001,
"*p* < 0.001",
ifelse(p < .05,
paste("*p* < ", p3, sep = ""),
paste("*p* = ", p3, sep = ""))))))
return(pv)
}
p_txt(0.00006)
#' @export p_txt
#' @param
#' A p value
#' @examples
p_txt<-function(p){
a = 'p < '
b = 'p = '
p <- ifelse(is.character(p), as.numeric(p), p)
p3 <- round(p, 3)
pv<-
ifelse(p < 0.000001,
"*p* < 10^-6^",
ifelse(p < .00001,
"*p* < 10^-5^",
ifelse(p < .0001,
"*p* < 10^-4^",
ifelse(p < .001,
"*p* < 0.001",
ifelse(p < .05,
paste("*p* < ", p3, sep = ""),
paste("*p* = ", p3, sep = ""))))))
return(pv)
}
#'a<-c(200.1, 190.9, 192.7, 213, 241.4, 196.9, 172.2, 185.5, 205.2, 193.7)
#' Poids des souris après traitement
#'b<-c(392.9, 393.2, 345.1, 393, 434, 427.9, 422, 383.9, 392.3, 352.2)
#' x<-t.test(a , mu=  0)
#' y<-t.test(a,b)
#' z<-t.test(a,b, paired = T)
#' tt_txt(x)
#' tt_txt(y, beta = F)
#' tt_txt(z)
#' tt_txt(z, beta = T)
tt_txt <- function(model, beta = T){
ttest<-model
# one sample t test
q<-round(ttest$statistic,2)# statistic q
dof<-round(ttest$parameter,2)# global degree of freedom
pv<-p_txt(ttest$p.value)# raw p value. Beyond 10^-6, the round will give 0.
b <- round(ttest$estimate[1] - ifelse(is.na(ttest$estimate[2]),0,ttest$estimate[2]),2)
# estimation of the beta slope.
full<- paste(
ifelse(isTRUE(beta),
paste("*M* = ",b, ", ", sep = ""), ""),
"95% CI [",round(ttest$conf.int[1],2),", ",
round(ttest$conf.int[2],2),"], *t*(",dof,") = ",q,", ",pv,
sep ="")
small<- paste("*t*(",dof,") = ",q,", ",pv,
sep ="")
return(list(full=full, small=small))
}
tt_txt(y, beta = F)
rho_txt <- function(model){
cor<-model
b<-round(cor$estimate,2) # estimation of the beta slope.
pv<-p_txt(cor$p.value)# raw p value. Beyond 10^-6, the round will give 0.
small<- paste("*r*~s~ =", b,", ",pv, sep = "")
return(list(small=small))
}
rho_txt(x)
cor_txt <- function(model){
cor<-model
b<-round(cor$estimate,2) # estimation of the beta slope.
# q<-round(cor$statistic,2)# statistic q
dof<-round(cor$parameter,2)# global degree of freedom
pv<-p_txt(cor$p.value)# raw p value. Beyond 10^-6, the round will give 0.
full<- paste("*r*(",dof,") = ",b,
", 95% CI [",
round(cor$conf.int[1],2),
", ",
round(cor$conf.int[2],2),
"], ",
pv,"",
sep ="")
small<- paste("*r*(",dof,") = ",b,", ",pv,sep ="")
return(list(full=full, small=small))
}
cor_txt(x)
cor_txt(y)
y
x<-cor.test(a,b)
cor_txt(x)
#' data$ID<-1:nrow(data)
#' model<-afex::aov_4(mpg~ vs * am + (1|ID), data) # between-subject design
#' result<-anova_txt(model = model, effect = "vs")
#' result$txt
#' example 2
#' data(mtcars)
#' data<-mtcars %>% mutate(ID = rep(1:16, 2), intra = rep(c(0,1), each=16))
#' model<-afex::aov_4(mpg~ 1 + (intra|ID), data) # within-subject design
#' result<-anova_txt(model = model)
#' result$anova$txt
aov4_txt(model, effect = "vs")
aov4_txt<- function(model_aov_4, effect = txt$Parameter){
# library(afex)
# library(effectsize)
# library(dplyr)
# library(magrittr)
pes<-
effectsize::eta_squared(model, partial = TRUE, ci = 0.9) %>%
data.frame %>%
mutate_if(is.numeric, round, digits=3)
table<-
model$anova_table %>%
data.frame %>%
mutate(Parameter = rownames(.))%>%
mutate_if(is.numeric, round, digits=2) %>%
inner_join(., pes, by = "Parameter")
txt<- table %>%
mutate(
txt= paste("*F*(",
num.Df,
", ",
den.Df,
") = ",
F,
", ",
p_txt(Pr..F.),
", ges = ",
ges,
", pes = ",
Eta_Sq_partial,
", 95% CI [",
CI_low,
", ",
CI_high,
"]",
sep = "")
)
txt<-txt[txt$Parameter == effect,]
return(txt)
}
#' data$ID<-1:nrow(data)
#' model<-afex::aov_4(mpg~ vs * am + (1|ID), data) # between-subject design
#' result<-anova_txt(model = model, effect = "vs")
#' result$txt
#' example 2
#' data(mtcars)
#' data<-mtcars %>% mutate(ID = rep(1:16, 2), intra = rep(c(0,1), each=16))
#' model<-afex::aov_4(mpg~ 1 + (intra|ID), data) # within-subject design
#' result<-anova_txt(model = model)
#' result$anova$txt
aov4_txt(model, effect = "vs")
aov4_txt<- function(model_aov_4, effect = txt$Parameter){
# library(afex)
# library(effectsize)
# library(dplyr)
# library(magrittr)
pes<-
effectsize::eta_squared(model, partial = TRUE, ci = 0.9) %>%
data.frame %>%
mutate_if(is.numeric, round, digits=3)
table<-
model$anova_table %>%
data.frame %>%
mutate(Parameter = rownames(.))%>%
mutate_if(is.numeric, round, digits=2) %>%
inner_join(., pes, by = "Parameter")
txt<- table %>%
mutate(
txt= paste("*F*(",
num.Df,
", ",
den.Df,
") = ",
F,
", ",
p_txt(Pr..F.),
", ges = ",
ges,
", pes = ",
Eta_Sq_partial,
", 95% CI [",
round(CI_low,2),
", ",
round(CI_high,2),
"]",
sep = "")
)
txt<-txt[txt$Parameter == effect,]
return(txt)
}
#' data$ID<-1:nrow(data)
#' model<-afex::aov_4(mpg~ vs * am + (1|ID), data) # between-subject design
#' result<-anova_txt(model = model, effect = "vs")
#' result$txt
#' example 2
#' data(mtcars)
#' data<-mtcars %>% mutate(ID = rep(1:16, 2), intra = rep(c(0,1), each=16))
#' model<-afex::aov_4(mpg~ 1 + (intra|ID), data) # within-subject design
#' result<-anova_txt(model = model)
#' result$anova$txt
aov4_txt(model, effect = "vs")
#' data$ID<-1:nrow(data)
#' model<-afex::aov_4(mpg~ vs * am + (1|ID), data) # between-subject design
#' result<-anova_txt(model = model, effect = "vs")
#' result$txt
#' example 2
#' data(mtcars)
#' data<-mtcars %>% mutate(ID = rep(1:16, 2), intra = rep(c(0,1), each=16))
#' model<-afex::aov_4(mpg~ 1 + (intra|ID), data) # within-subject design
#' result<-anova_txt(model = model)
#' result$anova$txt
aov4_txt(model, effect = "vs")
aov4_txt<- function(model_aov_4, effect = txt$Parameter){
# library(afex)
# library(effectsize)
# library(dplyr)
# library(magrittr)
pes<-
effectsize::eta_squared(model, partial = TRUE, ci = 0.9) %>%
data.frame %>%
mutate_if(is.numeric, round, digits=3)
table<-
model$anova_table %>%
data.frame %>%
mutate(Parameter = rownames(.))%>%
mutate_if(is.numeric, round, digits=2) %>%
inner_join(., pes, by = "Parameter")
txt<- table %>%
mutate(
txt= paste("*F*(",
num.Df,
", ",
den.Df,
") = ",
F,
", ",
p_txt(Pr..F.),
", ges = ",
round(ges,2),
", pes = ",
round(Eta_Sq_partial,2),
", 95% CI [",
round(CI_low,2),
", ",
round(CI_high,2),
"]",
sep = "")
)
txt<-txt[txt$Parameter == effect,]
return(txt)
}
#' data$ID<-1:nrow(data)
#' model<-afex::aov_4(mpg~ vs * am + (1|ID), data) # between-subject design
#' result<-anova_txt(model = model, effect = "vs")
#' result$txt
#' example 2
#' data(mtcars)
#' data<-mtcars %>% mutate(ID = rep(1:16, 2), intra = rep(c(0,1), each=16))
#' model<-afex::aov_4(mpg~ 1 + (intra|ID), data) # within-subject design
#' result<-anova_txt(model = model)
#' result$anova$txt
aov4_txt(model, effect = "vs")
aov4_txt<- function(model_aov_4, effect = txt$Parameter){
# library(afex)
# library(effectsize)
# library(dplyr)
# library(magrittr)
pes<-
effectsize::eta_squared(model, partial = TRUE, ci = 0.9) %>%
data.frame %>%
mutate_if(is.numeric, round, digits=3)
table<-
model$anova_table %>%
data.frame %>%
mutate(Parameter = rownames(.))%>%
mutate_if(is.numeric, round, digits=2) %>%
inner_join(., pes, by = "Parameter")
txt<- table %>%
mutate(
txt= paste("*F*(",
num.Df,
", ",
den.Df,
") = ",
F,
", ",
p_txt(Pr..F.),
", $\G^{2}_p$ = ",
round(ges,2),
", $\eta^{2}_p$ = ",
round(Eta_Sq_partial,2),
", 95% CI [",
round(CI_low,2),
", ",
round(CI_high,2),
"]",
sep = "")
)
txt<-txt[txt$Parameter == effect,]
return(txt)
}
aov4_txt<- function(model_aov_4, effect = txt$Parameter){
# library(afex)
# library(effectsize)
# library(dplyr)
# library(magrittr)
pes<-
effectsize::eta_squared(model, partial = TRUE, ci = 0.9) %>%
data.frame %>%
mutate_if(is.numeric, round, digits=3)
table<-
model$anova_table %>%
data.frame %>%
mutate(Parameter = rownames(.))%>%
mutate_if(is.numeric, round, digits=2) %>%
inner_join(., pes, by = "Parameter")
txt<- table %>%
mutate(
txt= paste("*F*(",
num.Df,
", ",
den.Df,
") = ",
F,
", ",
p_txt(Pr..F.),
", $\G^{2}_p$ = ",
round(ges,2),
", $\eta^{2}_p$ = ",
round(Eta_Sq_partial,2),
", 95% CI [",
round(CI_low,2),
", ",
round(CI_high,2),
"]",
sep = "")
)
txt<-txt[txt$Parameter == effect,]
return(txt)
}
p_txt
#' data$ID<-1:nrow(data)
#' model<-afex::aov_4(mpg~ vs * am + (1|ID), data) # between-subject design
#' result<-anova_txt(model = model, effect = "vs")
#' result$txt
#' example 2
#' data(mtcars)
#' data<-mtcars %>% mutate(ID = rep(1:16, 2), intra = rep(c(0,1), each=16))
#' model<-afex::aov_4(mpg~ 1 + (intra|ID), data) # within-subject design
#' result<-anova_txt(model = model)
#' result$anova$txt
aov4_txt(model, effect = "vs")
aov4_txt<- function(model_aov_4, effect = txt$Parameter){
# library(afex)
# library(effectsize)
# library(dplyr)
# library(magrittr)
pes<-
effectsize::eta_squared(model, partial = TRUE, ci = 0.9) %>%
data.frame %>%
mutate_if(is.numeric, round, digits=3)
table<-
model$anova_table %>%
data.frame %>%
mutate(Parameter = rownames(.))%>%
mutate_if(is.numeric, round, digits=2) %>%
inner_join(., pes, by = "Parameter")
txt<- table %>%
mutate(
txt= paste("*F*(",
num.Df,
", ",
den.Df,
") = ",
F,
", ",
p_txt(Pr..F.),
", ges = ",
round(ges,2),
", $\eta^{2}_p$ = ",
round(Eta_Sq_partial,2),
", 95% CI [",
round(CI_low,2),
", ",
round(CI_high,2),
"]",
sep = "")
)
txt<-txt[txt$Parameter == effect,]
return(txt)
}
