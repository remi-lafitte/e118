library(effsize)
tt_inter_txt <- function(dv, iv , df, welch= c(F, T)){
library(effsize)
# if welch is forgotten, the default will be "FALSE", that is group variances are supposed equal.
fit<-as.formula(paste(dv, "~" ,iv))
# to enter fit object in t.test
ttest<-t.test(fit, data = df, var.equal = !welch, paired = FALSE)
# t test
dof1<-table(df[,iv])[1]
dof2<-table(df[,iv])[2]
# degree of freedom
mean1<-tapply(df[,dv], df[,iv], mean)[1]
mean2<-tapply(df[,dv], df[,iv], mean)[2]
sd1<-tapply(df[,dv], df[,iv],sd)[1]
sd2<-tapply(df[,dv], df[,iv],sd)[2]
# mean and standard deviation
q<-round(ttest$statistic,2)# statistic q
dof<-round(ttest$parameter,2)# global degree of freedom
pv<-round(ttest$p.value,6)# raw p value. Beyond 10^-6, the round will give 0.
b<-round(ttest$estimate,2)# estimation of the beta slope.
#Now, we can calculate the Cohen's d (cd) effect size
#(see https://memory.psych.mun.ca/models/stats/effect_size.shtml) =
dof1_cd <- dof1 - 1
dof2_cd <- dof2 - 1
numerator  <- mean1 -  mean2
denominator <- sqrt(
( (dof1_cd*(sd1^2)) + (dof2_cd*(sd2^2)) ) / (dof1_cd + dof2_cd)
)
cd  <- numerator/denominator
# cohen's d
cd_ci<-effsize::cohen.d(df[, dv], f = df[, iv], conf.level = 0.95,
hedges.correction = F)
# confidence interval thanks to the effsize package
txt<-paste("*t*(",dof,")=",q,", *p*<",pv,", *d*=",round(cd,2),", 95% CI[",round(cd_ci$conf.int[1],2),", ",
round(cd_ci$conf.int[2],2),"]", sep = "")
return(txt)
}
tt_inter_txt(dv = "uptake", iv = "Type", df = CO2)
usethis::use_readme_md()
usethis::use_mit_license()
library(usethis)
usethis::use_readme_md()
setwd("./anova_txt")
wd
get_wd
getwd()
setwd(dir = here::here("R", "anova_txt"))
here::here("R", "anova_txt")
library(roxygen2)
?document
anova_txt<- function(model_aov_4){ # enter afex (aov_4) object here
library(afex)
library(effectsize)
library(dplyr)
library(magrittr)
pes<-
effectsize::eta_squared(model, partial = TRUE, ci = 0.9) %>%
data.frame %>%
mutate_if(is.numeric, round, digits=3)
table<-
model$anova_table %>%
data.frame %>%
rownames_to_column("Parameter") %>%
mutate_if(is.numeric, round, digits=2) %>%
inner_join(., pes, by = "Parameter")
table<- table %>%
mutate(
txt= paste("*F*(",
num.Df,
", ",
den.Df,
") = ",
F,
", *p* < ",
Pr..F.,
", ges = ",
ges,
", pes = ",
Eta_Sq_partial,
", 95% CI [",
CI_low,
", ",
CI_high,
"]",
sep = "")
)
return(list(anova = table))
}
data(mtcars)
mtcars
library(afex)
mtcars
data<-mtcars %>% mutate(ID = 1:nrow(.))
library(magrittr)
data<-mtcars %>% mutate(ID = 1:nrow(.))
library(dplyr)
data(mtcars)
data<-mtcars %>% mutate(ID = 1:nrow(.))
data
model<-afex::aov_4(mpg~ vs * am + (1|ID), data)
anova_txt(model = model)
library(tibble)
anova_txt(model = model)
result<-anova_txt(model = model)
result$anova$txt
mtcars %>%
mutate(ID = 1:nrow(.)) %>%
gather(var1, var2, c("vis"))
library(tidyr)
data<-mtcars %>%
mutate(ID = 1:nrow(.)) %>%
gather(var1, var2, c("vis"))
data<-mtcars %>%
mutate(ID = 1:nrow(.)) %>%
gather(var1, var2, c("vs"))
data
mtcars %>%
mutate(ID = rep(1:16, 2)
)
data<-mtcars %>%
mutate(ID = rep(1:16, 2))
data<-mtcars %>% mutate(ID = rep(1:16, 2))
data<-mtcars %>% mutate(ID = rep(1:16, 2), intra = rep(0:1, 2))
data<-mtcars %>% mutate(ID = rep(1:16, 2), intra = rep(c(0,1), 2))
mtcars %>% mutate(ID = rep(1:16, 2), intra = rep(c(0,1), 2))
data<-mtcars %>% mutate(ID = rep(1:16, 2), intra = rep(c(0,1), 16))
data
data<-mtcars %>% mutate(ID = rep(1:16, 2), intra = rep(c(0,1), 16))
model<-afex::aov_4(mpg~ 1 + (intra|ID), data) # within-subject design
data
data<-mtcars %>% mutate(ID = rep(1:16, 2), intra = rep(c(0,1), each=16))
model<-afex::aov_4(mpg~ 1 + (intra|ID), data) # within-subject design
model
result<-anova_txt(model = model)
result$anova$txt
install.packages("inline", contriburl = (contrib.url="https://github.com/remi-lafitte/inline.git"))
library(devtools)
install_github("remi-lafitte/inline")
install_github("remi-lafitte/inline")
library(inline)
inline
?inline
inline::anova_txt()
library(inline)
library(inline)
anova_txt(mdm)
.libPaths()
library(inline)
inline::plot_main
inline::plot_main.R
plot_main.R
plot_main
install_github("inline",username="remi-lafitte")
library(devtools)
install_github("inline",username="remi-lafitte")
?install_github
install_github(ref = "inline",username="remi-lafitte")
install_github(subdir = "inline",username="remi-lafitte")
install_github(subdir = "inline",username="remi-lafitte")
install_github("remi-lafitte/inline")
install_github("remi-lafitte/inline"; force = T)
install_github("remi-lafitte/inline", force = T)
library(inline)
lsf.str("package:inline")
lsf.str("package:dplyr")
ls("package:dplyr")
library(dpl)
ibrary(dplyr)
library(dplyr)
ls("package:dplyr")
ls("package:inline")
library(inline)
install_github("remi-lafitte/inline"; force = T)
install_github("remi-lafitte/inline", force = T)
ls(package:inline)
ls(package:inline)
install_github("remi-lafitte/inline", force = T)
#' model<-afex::aov_4(mpg~ vs * am + (1|ID), data) # between-subject design
#' result<-anova_txt(model = model)
#' result$anova$txt
#'
#' example 2 =
# data(mtcars)
# data<-mtcars %>% mutate(ID = rep(1:16, 2), intra = rep(c(0,1), each=16))
# model<-afex::aov_4(mpg~ 1 + (intra|ID), data) # within-subject design
# result<-anova_txt(model = model)
# result$anova$txt
library(devtools)
install_github("remi-lafitte/inline", force = T)
ls(package:inline)
library(inline)
ls(package:inline)
#' model<-afex::aov_4(mpg~ vs * am + (1|ID), data) # between-subject design
#' result<-anova_txt(model = model)
#' result$anova$txt
#'
#' example 2 =
# data(mtcars)
# data<-mtcars %>% mutate(ID = rep(1:16, 2), intra = rep(c(0,1), each=16))
# model<-afex::aov_4(mpg~ 1 + (intra|ID), data) # within-subject design
# result<-anova_txt(model = model)
# result$anova$txt
library(devtools)
install_github("remi-lafitte/inline", force = T)
library(inline)
ls(package:inline)
inline::anova_txt
devtools::load_all(".")
library(inline)
devtools::use_testthat()
use_testthat()
#' model<-afex::aov_4(mpg~ vs * am + (1|ID), data) # between-subject design
#' result<-anova_txt(model = model)
#' result$anova$txt
#'
#' example 2 =
# data(mtcars)
# data<-mtcars %>% mutate(ID = rep(1:16, 2), intra = rep(c(0,1), each=16))
# model<-afex::aov_4(mpg~ 1 + (intra|ID), data) # within-subject design
# result<-anova_txt(model = model)
# result$anova$txt
library(devtools)
devtools::use_testthat()
library(testthat)
use_testthat()
library(testthat)
library(inline)
test_check("inline")
devtools::load_all(".")
#' model<-afex::aov_4(mpg~ vs * am + (1|ID), data) # between-subject design
#' result<-anova_txt(model = model)
#' result$anova$txt
#'
#' example 2 =
# data(mtcars)
# data<-mtcars %>% mutate(ID = rep(1:16, 2), intra = rep(c(0,1), each=16))
# model<-afex::aov_4(mpg~ 1 + (intra|ID), data) # within-subject design
# result<-anova_txt(model = model)
# result$anova$txt
library(devtools)
install_github("remi-lafitte/inline", force = T)
library(inline)
ls(package:inline)
#' model<-afex::aov_4(mpg~ vs * am + (1|ID), data) # between-subject design
#' result<-anova_txt(model = model)
#' result$anova$txt
#'
#' example 2 =
# data(mtcars)
# data<-mtcars %>% mutate(ID = rep(1:16, 2), intra = rep(c(0,1), each=16))
# model<-afex::aov_4(mpg~ 1 + (intra|ID), data) # within-subject design
# result<-anova_txt(model = model)
# result$anova$txt
library(devtools)
install_github("remi-lafitte/inline", force = T, type="binary")
library(inline)
ls(package:inline)
library(lafitte)
lafitte::anova_txt()
lafitte::anovatxt()
ls(package:lafitte)
library(lafitte)
lafitte::anova_txt()
lafitte::anova_txt()
ls(package:lafitte)
library(lafitte)
ls(package:lafitte)
lafitte::anova_txt()
anova_txt()
library(lafitte)
lafitte::
use_testthat()
lafitte::
use_testthat()
lafitte::
ls(package:lafitte)
devtools::load_all(".")
library(lafitte)
library(lafitte)
ls(package:lafitte)
anova_txt()
lafitte::anova_txt()
#' model<-afex::aov_4(mpg~ vs * am + (1|ID), data) # between-subject design
#' result<-anova_txt(model = model)
#' result$anova$txt
#'
#' example 2 =
# data(mtcars)
# data<-mtcars %>% mutate(ID = rep(1:16, 2), intra = rep(c(0,1), each=16))
# model<-afex::aov_4(mpg~ 1 + (intra|ID), data) # within-subject design
# result<-anova_txt(model = model)
# result$anova$txt
library(devtools)
install_github("remi-lafitte/e118")
devtools::load_all(".")
